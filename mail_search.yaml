openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/ryanreh99/mail-search/1.0.0
  - description: Localhost
    url: http://127.0.0.1:8000/
info:
  version: "1.0.0"
  title: Mail-Search
  description: >-
    API specification of the mail-search application for searching and taking actions on your gmail account using the OAuth2 Application Flow.
security:
  - google-oauth2:
      - read
      - write
paths:
  /account/google/:
    get:
      summary: oauth2callback
      description: >-
        Do not navigate to this URL, run the standalone script.
      responses:
        '200':
          description: OK
  /messages/user/:
    get:
      summary: Get message ids by checking email contents.
      parameters:
        - in: query
          name: field
          schema:
            type: string
          required: true
          description: >-
              can only take values - 'From' and 'To'
          example: From
        - in: query
          name: predicate
          schema:
            type: string
          required: true
          description: >-
              can only take values - 'contains' and 'not equals'
          example: contains
        - in: query
          name: value
          schema:
            type: string
          required: true
          description: >-
              part of emails to search for
          example: '@gmail.com'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonResponse'
  /messages/subject/:
    get:
      summary: Get message ids by checking body contents.
      parameters:
        - in: query
          name: field
          schema:
            type: string
          required: true
          description: >-
              can only take value - 'Subject'
          example: Subject
        - in: query
          name: predicate
          schema:
            type: string
          required: true
          description: >-
              can only take values - 'Contains' and 'Not equals'
          example: contains
        - in: query
          name: value
          schema:
            type: string
          required: true
          description: >-
              part of the body to search for.
          example: 'Unsubscribe'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonResponse'
  /messages/datetime/:
    get:
      summary: Get message ids by comparing date sent.
      parameters:
        - in: query
          name: field
          schema:
            type: string
          required: true
          description: >-
              can only take value - 'Date Received'
          example: Subject
        - in: query
          name: predicate
          schema:
            type: string
          required: true
          description: >-
              can only take values - 'Less than' and 'Greater than'
          example: contains
        - in: query
          name: value
          schema:
            type: string
          required: true
          description: >-
              Has to be in "DD/MM/YYYY" format.
          example: '24/06/2021'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonResponse'
  /messages/view/:
    get:
      summary: Get message ids by checking body contents.
      parameters:
        - in: query
          name: ids
          schema:
            type: string
          required: true
          description: >-
              string of ids seperated by commas
          example: 8abdg4567,4446dfg64,dfg7478dfg
        - in: query
          name: config
          schema:
            type: boolean
          required: false
          description: >-
              Pass false to include additional message info such as sender id, receiver id and content.
          example: False
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                - required:
                  - result
                  - ids
                  example: {
                    "result": "success",
                    "ids": [
                        {
                          "config": {
                              "config_id": 10,
                              "config_inbox": true,
                              "config_spam": false,
                              "config_trash": false,
                              "config_unread": true,
                              "config_starred": false,
                              "config_important": true,
                              "config_sent": false,
                              "config_draft": false,
                              "config_category_personal": false,
                              "config_category_social": false,
                              "config_category_promotions": false,
                              "config_category_updates": true,
                              "config_category_forums": false
                          },
                          "id": "176fee84774f676c",
                          "sender_id": 3,
                          "receiver_id": 4,
                          "content": "abc"
                        }
                      ]
                  }
  /messages/action/:
    post:
      summary: Get message ids by checking body contents.
      parameters:
        - in: query
          name: ids
          schema:
            type: string
          required: true
          description: >-
              string of ids seperated by commas
          example: 8abdg4567,4446dfg64,dfg7478dfg
        - in: query
          name: view
          schema:
            type: boolean
          description: >-
              pass true to display messages
          example: true
        - in: query
          name: mark_read
          schema:
            type: boolean
          description: >-
              pass true to mark messages as read
          example: true
        - in: query
          name: mark_unread
          schema:
            type: boolean
          description: >-
              pass true to mark messages as unread
          example: true
        - in: query
          name: move
          schema:
            type: string
          description: >-
              pass the label to move the messages to
          example: "INBOX"
      responses:
        '200':
          description: OK

components:
  schemas:
    JsonResponse:
      allOf:
        - $ref: "#/components/schemas/MessageIds"
        - required:
          - result
          properties:
            result:
              type: string
              enum:
                - success
                - error
          example: {"result": "success"}
    MessageIds:
      allOf:
        - required:
          - ids
          properties:
            ids:
              type: array
              items:
                type: string
          example: {
            "ids": [
              "176ff89c5e864e21",
              "176ff3770e261142"
            ]
          }
  securitySchemes:
    google-oauth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: 'https://oauth2.googleapis.com/token'
          scopes:
            write: allows modifying resources
            read: allows reading resources